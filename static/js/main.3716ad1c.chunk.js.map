{"version":3,"sources":["components/SearchBars.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","api/youtube.js","hooks/useVideos.js","components/App.js","index.js"],"names":["SearchBar","onFormSubmit","useState","term","setTerm","className","onSubmit","event","preventDefault","type","value","onChange","target","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","videoElement","key","id","videoId","VideoDetail","videoSrc","allowFullScreen","mozallowfullscreen","msallowfullscreen","oallowfullscreen","webkitallowfullscreen","description","axios","create","baseURL","useVideos","defaultSearchTerm","setVideos","useEffect","search","a","youtube","get","params","q","part","maxResults","response","data","items","App","selectedVideo","setSelectedVideo","ReactDOM","render","document","getElementById"],"mappings":"iOA2BeA,EAzBG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACfC,mBAAS,IADM,mBAChCC,EADgC,KAC1BC,EAD0B,KASvC,OACC,yBAAKC,UAAU,yBACd,0BAAMC,SARS,SAACC,GACjBA,EAAMC,iBAENP,EAAaE,IAKcE,UAAU,WACnC,yBAAKA,UAAU,SACd,+CACA,2BACCI,KAAK,OACLC,MAAOP,EACPQ,SAAU,SAACJ,GAAD,OAAWH,EAAQG,EAAMK,OAAOF,cCCjCG,G,MAjBG,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,cAC1B,OACC,yBAAKC,QAAS,kBAAMD,EAAcD,IAAQT,UAAU,mBACnD,yBACCY,IAAKH,EAAMI,QAAQC,MACnBd,UAAU,WACVe,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MAEtC,yBAAKlB,UAAU,WACd,yBAAKA,UAAU,UACbS,EAAMI,QAAQC,WCCLK,EAXG,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,OAAQV,EAAmB,EAAnBA,cACrBW,EAAeD,EAAOE,KAAI,SAACC,GAChC,OAAO,kBAAC,EAAD,CACNC,IAAKD,EAAaE,GAAGC,QACrBhB,cAAeA,EACfD,MAAOc,OAGT,OAAO,yBAAKvB,UAAU,2BAA2BqB,ICmBnCM,EA5BK,SAAC,GAAa,IAAZlB,EAAW,EAAXA,MACrB,IAAKA,EACJ,OAAO,2CAGR,IAAMmB,EAAQ,wCAAmCnB,EAAMgB,GAAGC,SAE1D,OACC,6BACC,yBAAK1B,UAAU,YACd,4BACCc,MAAM,eACNC,IAAKa,EACLC,gBAAgB,kBAChBC,mBAAmB,qBACnBC,kBAAkB,oBAClBC,iBAAiB,mBACjBC,sBAAsB,2BAGxB,yBAAKjC,UAAU,cACd,wBAAIA,UAAU,aAAaS,EAAMI,QAAQC,OACzC,2BAAIL,EAAMI,QAAQqB,gB,gCCpBPC,E,OAAAA,EAAMC,OAAO,CAC3BC,QAAS,0CCwBKC,EAxBG,SAACC,GAAuB,IAAD,EACZ1C,mBAAS,IADG,mBACjCuB,EADiC,KACzBoB,EADyB,KAGxCC,qBAAU,WACTC,EAAOH,KACL,CAACA,IAEJ,IAAMG,EAAM,uCAAG,WAAM5C,GAAN,eAAA6C,EAAA,sEACSC,EAAQC,IAAI,UAAW,CAC7CC,OAAQ,CACPC,EAAGjD,EACHkD,KAAM,UACN5C,KAAM,QACN6C,WAAY,EACZzB,IAhBQ,6CASI,OACR0B,EADQ,OAWdV,EAAUU,EAASC,KAAKC,OAXV,2CAAH,sDAcZ,MAAO,CAAChC,EAAQsB,ICQFW,EA3BH,WAAO,IAAD,EACyBxD,mBAAS,MADlC,mBACVyD,EADU,KACKC,EADL,OAEQjB,EAAU,SAFlB,mBAEVlB,EAFU,KAEFsB,EAFE,KAQjB,OAJAD,qBAAU,WACTc,EAAiBnC,EAAO,MACtB,CAACA,IAGH,yBAAKpB,UAAU,gBACd,kBAAC,EAAD,CAAWJ,aAAc8C,IACzB,yBAAK1C,UAAU,WACd,yBAAKA,UAAU,UACd,yBAAKA,UAAU,sBACd,kBAAC,EAAD,CAAaS,MAAO6C,KAErB,yBAAKtD,UAAU,oBACd,kBAAC,EAAD,CACCU,cAAe6C,EACfnC,OAAQA,SCtBfoC,IAASC,OACR,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.3716ad1c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SearchBar = ({ onFormSubmit }) => {\r\n\tconst [term, setTerm] = useState('');\r\n\r\n\tconst onSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tonFormSubmit(term);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"search-bar ui segment\">\r\n\t\t\t<form onSubmit={onSubmit} className=\"ui form\">\r\n\t\t\t\t<div className=\"field\">\r\n\t\t\t\t\t<label>Video Search</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={term}\r\n\t\t\t\t\t\tonChange={(event) => setTerm(event.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBar;\r\n","import '../css/VideoItem.css';\r\nimport React from 'react';\r\n\r\nconst VideoItem = ({video, onVideoSelect}) => {\r\n\treturn (\r\n\t\t<div onClick={() => onVideoSelect(video)} className=\"video-item item\">\r\n\t\t\t<img\r\n\t\t\t\talt={video.snippet.title}\r\n\t\t\t\tclassName=\"ui image\"\r\n\t\t\t\tsrc={video.snippet.thumbnails.medium.url}\r\n\t\t\t/>\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<div className=\"header\">\r\n\t\t\t\t\t{video.snippet.title}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default VideoItem","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({videos, onVideoSelect}) => {\r\n\tconst renderedList = videos.map((videoElement) => {\r\n\t\treturn <VideoItem\r\n\t\t\tkey={videoElement.id.videoId}\r\n\t\t\tonVideoSelect={onVideoSelect}\r\n\t\t\tvideo={videoElement}/>\r\n\t})\r\n\r\n\treturn <div className=\"ui relaxed divided list\">{renderedList}</div>\r\n};\r\n\r\nexport default VideoList","import React from 'react';\r\n\r\nconst VideoDetail = ({video}) => {\r\n\tif (!video) {\r\n\t\treturn <div>Loading...</div>\r\n\t}\r\n\r\n\tconst videoSrc =`https://www.youtube.com/embed/${video.id.videoId}`\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"ui embed\">\r\n\t\t\t\t<iframe\r\n\t\t\t\t\ttitle=\"video player\"\r\n\t\t\t\t\tsrc={videoSrc}\r\n\t\t\t\t\tallowFullScreen=\"allowfullscreen\"\r\n\t\t\t\t\tmozallowfullscreen=\"mozallowfullscreen\"\r\n\t\t\t\t\tmsallowfullscreen=\"msallowfullscreen\"\r\n\t\t\t\t\toallowfullscreen=\"oallowfullscreen\"\r\n\t\t\t\t\twebkitallowfullscreen=\"webkitallowfullscreen\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"ui segment\">\r\n\t\t\t\t<h4 className=\"ui header\">{video.snippet.title}</h4>\r\n\t\t\t\t<p>{video.snippet.description}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default VideoDetail","import axios from 'axios';\r\n\r\n\r\n\r\nexport default axios.create({\r\n\tbaseURL: 'https://www.googleapis.com/youtube/v3',\r\n});","import {useEffect, useState} from 'react';\r\nimport youtube from '../api/youtube';\r\n\r\nconst KEY = 'AIzaSyAsZ9m9I5VvFyAoJhQ157iuIlCmekbrCpA';\r\n\r\nconst useVideos = (defaultSearchTerm) => {\r\n\tconst [videos, setVideos] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsearch(defaultSearchTerm);\r\n\t}, [defaultSearchTerm]);\r\n\r\n\tconst search = async term => {\r\n\t\tconst response = await youtube.get('/search', {\r\n\t\t\tparams: {\r\n\t\t\t\tq: term,\r\n\t\t\t\tpart: 'snippet',\r\n\t\t\t\ttype: 'video',\r\n\t\t\t\tmaxResults: 5,\r\n\t\t\t\tkey: KEY\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsetVideos(response.data.items);\r\n\t};\r\n\r\n\treturn [videos, search];\r\n};\r\n\r\nexport default useVideos","import React, {useEffect, useState} from 'react';\r\nimport SearchBar from './SearchBars';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport useVideos from '../hooks/useVideos';\r\n\r\n\r\nconst App = () => {\r\n\tconst [selectedVideo, setSelectedVideo] = useState(null);\r\n\tconst [videos, search] = useVideos('music');\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedVideo(videos[0]);\r\n\t}, [videos]);\r\n\r\n\treturn (\r\n\t\t<div className=\"ui container\">\r\n\t\t\t<SearchBar onFormSubmit={search}/>\r\n\t\t\t<div className=\"ui grid\">\r\n\t\t\t\t<div className=\"ui row\">\r\n\t\t\t\t\t<div className=\"eleven wide column\">\r\n\t\t\t\t\t\t<VideoDetail video={selectedVideo}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"five wide column\">\r\n\t\t\t\t\t\t<VideoList\r\n\t\t\t\t\t\t\tonVideoSelect={setSelectedVideo}\r\n\t\t\t\t\t\t\tvideos={videos}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n\t<App/>,\r\n\tdocument.getElementById('root')\r\n);"],"sourceRoot":""}